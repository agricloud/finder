/*
 * File: app/view/CommonImageUploader.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprintTouch.view.CommonImageUploader', {
    extend: 'Ext.Panel',
    alias: 'widget.commonimageuploader',

    requires: [
        'Ext.ux.Fileup'
    ],

    config: {
        itemId: 'commonImageUploader',
        layout: {
            align: 'center',
            type: 'vbox'
        },
        items: [
            {
                xtype: 'segmentedbutton',
                //docked: 'top',
                items: [
                    {
                        xtype: 'fileupload',
                        name: 'file',
                        itemId: 'fileuploadBtn',
                        autoUpload: true,
                        states: {
                            browse: {
                                text: '圖片上傳'
                            }
                        },
                        listeners: {
                            success: function(){
                                                this.up().up().showImage();
                                            },
                            failure: function(){
                                                this.up().up().fileUploadFailure();
                                            },
                            tap: function( btn, e, eOpts ){
                                                var uploadUrl=this.up().up().getUploadUrl();
                                                console.log(uploadUrl);
                                                btn.setUrl(uploadUrl);
                                            }
                        }
                    },
                    {
                        xtype: 'button',
                        itemId: 'deleteBtn',
                        text: 'delete',
                        handler: function(button, event) {
                                        button.up().up().deleteImage();
                                    }
                    }
                ]
            },
            {
                xtype: 'image',
                src: '',
                itemId: 'mainImg',
                hidden: true,
                height: 150,
                width: 310
            }
        ]
    },

    showImage: function() {
        this.getComponent("mainImg").show();
        this.getComponent("mainImg").setSrc('/attachment/show/'+this.domainId+"?domainName="+this.domainName+'&date='+(new Date()));

    },

    getUploadUrl: function() {
        return '/attachment/save?domainId='+this.domainId+'&domainName='+this.domainName;
    },

    deleteImage: function() {
        var that=this;
        Ext.Ajax.request( {  
            url : '/attachment/delete/'+this.domainId,
            method : 'post',  
            params : {  
                domainName : this.domainName 
            },  
            success : function(response, options) {  
                that.emptyImage();
            },  
            failure : function() {  
                Ext.Msg.alert('Error', "can't delete image");
            }  
        });
    },

    emptyImage: function() {
        this.getComponent("mainImg").setSrc('');
        this.getComponent("mainImg").hide();
    },

    hiddenBtn: function() {
        this.getComponent("deleteBtn").hide();
        this.getComponent("fileuploadBtn").hide();
    },

    showBtn: function() {
        this.getComponent("deleteBtn").show();
        this.getComponent("fileuploadBtn").show();
    },

    initialize: function() {
        this.callParent();
        this.down('fileupload[itemId=fileuploadBtn]').setText(Utilities.getMsg('common.imageUploadBtn.label') );
        this.down('button[itemId=deleteBtn]').setText(Utilities.getMsg('common.deleteBtn.label') );   
    },

    setDomainName: function(name) {
        this.domainName=name;
    },

    setDomainId: function(id) {
        this.domainId=id;
    }

});