{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "models": [
            "BatchRouteDeep",
            "BatchReportDetDeep"
        ],
        "stores": [
            "BatchRouteDeepStore",
            "BatchRouteParamsFormStore"
        ],
        "views": [
            "BatchParamsCarousel",
            "BatchRouteParamsPanel"
        ],
        "designer|userClassName": "BatchParamsCarouselController"
    },
    "designerId": "30293a04-a602-4dba-b2f0-15b6d75b8f38",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "ref",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "",
                    "this.control({",
                    "    'batchparamscarousel searchfield[itemId=commonSearchField]':{",
                    "        action:this.doSearchBatchRouteList",
                    "    },",
                    "    'batchparamscarousel list[itemId=batchRouteList]':{",
                    "        select:this.loadBatchRouteParams//Ajax",
                    "    },",
                    "    '#selectBatchBackToolbar button[itemId=commonBackBtn]':{",
                    "        tap:function(btn, e, eOpts){",
                    "            history.go(0);",
                    "        }",
                    "    },",
                    "    '#batchRouteParamsBackToolbar button[itemId=commonBackBtn]':{",
                    "        tap:function(btn, e, eOpts){",
                    "            this.getBatchParamsCarousel().previous();",
                    "        }",
                    "    },",
                    "    'batchrouteparamspanel button[itemId=commonUpdateBtn]':{",
                    "        tap:this.doUpdateBatchRouteParamsForm",
                    "    }",
                    "});"
                ]
            },
            "designerId": "12c6bc0c-2509-401b-a302-5cbf1518713b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doSearchBatchRouteList",
                "designer|params": [
                    "field, e, eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-doSearchBatchRouteList');",
                    "",
                    "this.getBatchRouteList().getStore().load({",
                    "    params:{",
                    "        'batch.id':field.getValue()",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "527edd63-f821-4a5e-96bc-802b6b267ddc"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchParamsCarousel",
                "selector": "batchparamscarousel"
            },
            "designerId": "8e13bb56-0372-4344-8e17-0a52c90d916a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchRouteList",
                "selector": "batchroutelist"
            },
            "designerId": "bbe77704-210b-4958-b0b7-c65607a309ff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadBatchRouteParamsAjax",
                "designer|params": [
                    "list",
                    "record",
                    "eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-loadBatchRouteParamsAjax');",
                    "var that=this;",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'/batchReportDet/batchRouteParamsListJson',",
                    "    params:{",
                    "        'batch.id':record.data['batch__id'],",
                    "        'operation.id':record.data['operation__id']",
                    "    },",
                    "    callback:function(callback,success,data){",
                    "",
                    "        var jsondata=Ext.decode(data.responseText).batchRouteParamsInstanceList;",
                    "",
                    "        if(jsondata.length>0){",
                    "",
                    "            that.getBatchParamsCarousel().remove(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'),true);",
                    "",
                    "            that.getBatchParamsCarousel().add(Ext.widget('batchrouteparamspanel'));",
                    "            var form=that.getBatchParamsCarousel().down('formpanel[itemId=batchRouteParamsForm]');",
                    "            for(var i=0; i<jsondata.length; i++){",
                    "",
                    "                var field=null;",
                    "",
                    "                switch(jsondata[i].reportParams.param.paramType.name){",
                    "                    case \"INTEGER\":",
                    "                    field={",
                    "                        xtype: 'numberfield'",
                    "                    };",
                    "                    break;",
                    "                    case \"STRING\":",
                    "                    field={",
                    "                        xtype: 'textfield'",
                    "                    };",
                    "                    break;",
                    "                    case \"BOOLEAN\":",
                    "                    field={",
                    "                        xtype: 'textfield'",
                    "                    };",
                    "                    break;",
                    "                    case \"LIST\":",
                    "                    //field={",
                    "                    //    xtype: 'triggerfield'",
                    "                    //};",
                    "                    break;",
                    "                    default:",
                    "                    console.log('error: not defined paramType');",
                    "                    break;",
                    "",
                    "                }",
                    "",
                    "                field.flex=1;",
                    "                field.label= jsondata[i].reportParams.param.title;",
                    "                field.name = jsondata[i].id;",
                    "                if(jsondata[i].value==null || jsondata[i].value==''){",
                    "                    field.value=jsondata[i].reportParams.param.defaultValue;",
                    "                }",
                    "                else{",
                    "                    field.value=jsondata[i].value;",
                    "                }",
                    "",
                    "                field.listeners=[{",
                    "                    fn: function(){",
                    "                        this.setValue(null);",
                    "                    },",
                    "                    event: 'clearicontap'",
                    "                }];",
                    "",
                    "                form.down('fieldset[itemId=dynamicFieldSet]').add(field);",
                    "",
                    "            }//end for",
                    "",
                    "            that.getBatchParamsCarousel().setActiveItem(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'));",
                    "",
                    "",
                    "",
                    "            // display Image",
                    "            var commonImageUploader= that.getBatchParamsCarousel().down('commonimageuploader');",
                    "            commonImageUploader.setDomainName('batchRoute');",
                    "            commonImageUploader.setDomainId(record.data['id']);",
                    "            commonImageUploader.showImage();            ",
                    "",
                    "        }//end if",
                    "",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "designerId": "29c4ee6a-508c-4eb3-82e9-9816509e35fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadBatchRouteParams",
                "designer|params": [
                    "list",
                    "record",
                    "eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-loadBatchRouteParams');",
                    "",
                    "",
                    "var store=Ext.getStore('BatchRouteParamsFormStore');",
                    "",
                    "var that=this;",
                    "",
                    "store.load({",
                    "    params:{",
                    "        'batch.id':record.data['batch__id'],",
                    "        'operation.id':record.data['operation__id']",
                    "    },",
                    "    callback:function(records, operation, success){",
                    "",
                    "        that.getBatchParamsCarousel().remove(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'),true);",
                    "",
                    "        that.getBatchParamsCarousel().add({xtype:'batchrouteparamspanel'});",
                    "        var form=that.getBatchParamsCarousel().down('formpanel[itemId=batchRouteParamsForm]');",
                    "",
                    "        store.each(function(item, index, length){",
                    "",
                    "            var field=null;",
                    "",
                    "            switch(item.data['reportParams__param__paramType']){",
                    "                case \"INTEGER\":",
                    "                field={",
                    "                    xtype: 'numberfield'",
                    "                };",
                    "                break;",
                    "                case \"STRING\":",
                    "                field={",
                    "                    xtype: 'textfield'",
                    "                };",
                    "                break;",
                    "                case \"BOOLEAN\":",
                    "                field={",
                    "                    xtype: 'checkboxfield'",
                    "                };",
                    "                break;",
                    "                case \"LIST\":",
                    "                field={",
                    "                    xtype: 'textfield'",
                    "                    //    xtype: 'triggerfield'",
                    "                };",
                    "                break;",
                    "                default:",
                    "                console.log('error: not defined paramType');",
                    "                break;",
                    "            }",
                    "",
                    "            field.flex=1;",
                    "            field.label= item.data['reportParams__param__title'];",
                    "            field.name = item.data['id'];",
                    "",
                    "            if(item.data['value']==null || item.data['value']==''){",
                    "                field.value=item.data['reportParams__param__defaultValue'];",
                    "            }",
                    "            else{",
                    "                field.value=item.data['value'];",
                    "            }",
                    "",
                    "",
                    "            switch(item.data['reportParams__param__paramType']){",
                    "                case \"INTEGER\":",
                    "                case \"STRING\":",
                    "                case \"LIST\":",
                    "                field.listeners=[{",
                    "                    fn: function(obj, e, eOpts){",
                    "                        this.setValue(null);",
                    "                    },",
                    "                    event: 'clearicontap'",
                    "                }];",
                    "                break;",
                    "                case \"BOOLEAN\":",
                    "                if(field.value=='true')",
                    "                field.checked=true;",
                    "                else",
                    "                field.checked=false;",
                    "",
                    "                field.listeners=[{",
                    "                    fn: function(obj, newValue, oldValue, eOpts){",
                    "                        if(obj.isChecked())",
                    "                        obj.setValue(true);",
                    "                        else",
                    "                        obj.setValue(false);",
                    "                    },",
                    "                    event: 'change'",
                    "                }];",
                    "                break;",
                    "                //case \"LIST\":",
                    "                //    break;",
                    "                default:",
                    "                console.log('error: not defined paramType');",
                    "                break;",
                    "            }",
                    "",
                    "",
                    "            form.down('fieldset[itemId=dynamicFieldSet]').add(field);",
                    "",
                    "        });//end each",
                    "",
                    "        that.getBatchParamsCarousel().setActiveItem(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'));",
                    "",
                    "        // display Image",
                    "        var commonImageUploader= that.getBatchParamsCarousel().down('commonimageuploader');",
                    "        commonImageUploader.setDomainName('batchRoute');",
                    "        commonImageUploader.setDomainId(record.data['id']);",
                    "        commonImageUploader.showImage();",
                    "",
                    "    }//end callback",
                    "});"
                ]
            },
            "designerId": "0bb35c94-9325-439b-8d89-c548a27bf94a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchRouteParamsPanel",
                "selector": "batchrouteparamspanel"
            },
            "designerId": "131c5aa6-6a3b-468c-9428-bcf2f8a2b8da"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doUpdateBatchRouteParamsForm",
                "designer|params": [
                    "btn, e, eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-doUpdateBatchRouteParamsForm');",
                    "",
                    "var form=this.getBatchRouteParamsPanel().down('formpanel[itemId=batchRouteParamsForm]');",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '/rest/batchReportDet',",
                    "    submitEmptyText: false,",
                    "    jsonData: Ext.JSON.encode(form.getValues()),",
                    "    waitMsg:{",
                    "        xtype:'loadmask',",
                    "        message:'Saving Data...'",
                    "    },",
                    "    method:'PUT',",
                    "    //由於touch ajax 回傳的非json物件, 因此無法直接使用success/failure, 改用callback處理",
                    "    callback: function(opts,success, response) {",
                    "        var resp = Ext.decode(response.responseText);",
                    "        if(resp.success){",
                    "            console.log('Updating Success！');",
                    "            console.log(resp.message);",
                    "            Ext.Msg.alert(\"Success\", resp.message);",
                    "        }",
                    "        else{",
                    "            console.log('Updating Failed！');",
                    "            console.log(resp.message);",
                    "            Ext.Msg.alert(\"Failed\", resp.message);",
                    "        }",
                    "    },",
                    "});"
                ]
            },
            "designerId": "3c0550ff-776f-4f02-a7d5-48b60d5d4eb4"
        }
    ]
}