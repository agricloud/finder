{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "models": [
            "BatchRoute",
            "BatchReportDet",
            "Batch"
        ],
        "stores": [
            "BatchRouteStore",
            "BatchRouteParamsFormStore",
            "BatchStore"
        ],
        "views": [
            "BatchParamsCarousel",
            "BatchRouteParamsPanel"
        ],
        "designer|userClassName": "BatchParamsCarouselController"
    },
    "designerId": "30293a04-a602-4dba-b2f0-15b6d75b8f38",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "ref",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "init",
                "designer|params": [
                    "application"
                ],
                "implHandler": [
                    "",
                    "this.control({",
                    "    'batchparamscarousel selectfield[itemId=commonBatchSelect]':{",
                    "        change:this.doIndexDetail",
                    "    },",
                    "    'batchparamscarousel list[itemId=batchRouteList]':{",
                    "        select:this.doShowParams",
                    "    },",
                    "    '#selectBatchBackToolbar button[itemId=commonBackBtn]':{",
                    "        tap:function(btn, e, eOpts){",
                    "            history.go(0);",
                    "        }",
                    "    },",
                    "    '#batchRouteParamsBackToolbar button[itemId=commonBackBtn]':{",
                    "        tap:function(btn, e, eOpts){",
                    "            this.getBatchParamsCarousel().previous();",
                    "            this.getBatchRouteList().deselectAll();",
                    "        }",
                    "    },",
                    "    'batchrouteparamspanel button[itemId=commonUpdateBtn]':{",
                    "        tap:this.doSaveOrUpdate",
                    "    }",
                    "});"
                ]
            },
            "designerId": "12c6bc0c-2509-401b-a302-5cbf1518713b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchParamsCarousel",
                "selector": "batchparamscarousel"
            },
            "designerId": "8e13bb56-0372-4344-8e17-0a52c90d916a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchRouteList",
                "selector": "batchroutelist"
            },
            "designerId": "bbe77704-210b-4958-b0b7-c65607a309ff"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "batchRouteParamsPanel",
                "selector": "batchrouteparamspanel"
            },
            "designerId": "131c5aa6-6a3b-468c-9428-bcf2f8a2b8da"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doIndexDetail",
                "designer|params": [
                    "field, newValue, oldValue, eOpts",
                    "fun"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-doIndexDetail');",
                    "",
                    "var id=-1;",
                    "if(field.getValue())",
                    "id=field.getValue();",
                    "",
                    "this.getBatchRouteList().getStore().removeAll();",
                    "",
                    "this.getBatchRouteList().getStore().load({",
                    "    params:{",
                    "        'batch.id':id",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "        if(!success){",
                    "            Ext.Msg.alert(\"Failed\", operation['_resultSet']['_message']);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "527edd63-f821-4a5e-96bc-802b6b267ddc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doShowParams",
                "designer|params": [
                    "list",
                    "record",
                    "eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-doShow');",
                    "",
                    "var that=this;",
                    "",
                    "this.getBatchParamsCarousel().setMasked({",
                    "    xtype:'loadmask',",
                    "    message: Utilities.getMsg('default.message.load')",
                    "});",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'/batchRoute/show',",
                    "    params:{",
                    "        'id':record.data['id']",
                    "    },",
                    "    callback: function(options, success, response) {",
                    "        record = Ext.decode(response.responseText);",
                    "",
                    "        if(!record.success){",
                    "            Ext.Msg.alert(\"Failed\", record.message);",
                    "        }",
                    "        else{",
                    "",
                    "            var store=Ext.getStore('BatchRouteParamsFormStore');",
                    "",
                    "            var id=-1,opid=-1,woid=-1;",
                    "",
                    "            if(record){",
                    "                id=record.data['batch.id'];",
                    "                opid=record.data['operation.id'];",
                    "                woid=record.data['workstation.id'];",
                    "                spid = record.data['supplier.id'];",
                    "            }",
                    "",
                    "            //重新讀取參數資料",
                    "            store.load({",
                    "                params:{",
                    "                    'batch.id':id,",
                    "                    'operation.id':opid,",
                    "                    'workstation.id':woid,",
                    "                \t'supplier.id':spid",
                    "                },",
                    "                callback:function(records, operation, success){",
                    "                    if(success){",
                    "",
                    "                        that.getBatchParamsCarousel().remove(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'),true);",
                    "",
                    "                        that.getBatchParamsCarousel().add({xtype:'batchrouteparamspanel'});",
                    "                        var form=that.getBatchParamsCarousel().down('formpanel[itemId=batchRouteParamsForm]');",
                    "",
                    "                        store.each(function(item, index, length){",
                    "                            console.log(item);",
                    "",
                    "                            var field=null;",
                    "",
                    "                            switch(item.data['reportParams__param__paramType']){",
                    "                                case \"INTEGER\":",
                    "                                case \"FLOAT\":",
                    "                                field={",
                    "                                    xtype: 'numberfield'",
                    "                                };",
                    "                                break;",
                    "                                case \"STRING\":",
                    "                                field={",
                    "                                    xtype: 'textfield'",
                    "                                };",
                    "                                break;",
                    "                                case \"BOOLEAN\":",
                    "                                field={",
                    "                                    xtype: 'checkboxfield'",
                    "                                };",
                    "                                break;",
                    "                                case \"LIST\":",
                    "                                field={",
                    "                                    xtype: 'textfield'",
                    "                                    //xtype: 'triggerfield'",
                    "                                };",
                    "                                break;",
                    "                                default:",
                    "                                console.log('error: not defined paramType'+item.data['reportParams__param__paramType']);",
                    "                                break;",
                    "                            }",
                    "",
                    "                            field.label= item.data['reportParams__param__title'];",
                    "                            field.name = item.data['id'];",
                    "",
                    "                            if(item.data['value']==null || item.data['value']==''){",
                    "                                field.value=item.data['reportParams__param__defaultValue'];",
                    "                            }",
                    "                            else{",
                    "                                field.value=item.data['value'];",
                    "                            }",
                    "",
                    "",
                    "                            switch(item.data['reportParams__param__paramType']){",
                    "                                case \"INTEGER\":",
                    "                                case \"FLOAT\":",
                    "                                case \"STRING\":",
                    "                                case \"LIST\":",
                    "                                field.listeners=[{",
                    "                                    fn: function(obj, e, eOpts){",
                    "                                        this.setValue(null);",
                    "                                    },",
                    "                                    event: 'clearicontap'",
                    "                                }];",
                    "                                break;",
                    "                                case \"BOOLEAN\":",
                    "                                if(field.value=='true')",
                    "                                field.checked=true;",
                    "                                else",
                    "                                field.checked=false;",
                    "",
                    "                                field.listeners=[{",
                    "                                    fn: function(obj, newValue, oldValue, eOpts){",
                    "                                        if(obj.isChecked())",
                    "                                        obj.setValue(true);",
                    "                                        else",
                    "                                        obj.setValue(false);",
                    "                                    },",
                    "                                    event: 'change'",
                    "                                }];",
                    "                                break;",
                    "                                //case \"LIST\":",
                    "                                //    break;",
                    "                                default:",
                    "                                console.log('error: not defined paramType');",
                    "                                break;",
                    "                            }",
                    "",
                    "",
                    "                            form.add(field);",
                    "",
                    "                        });//end each",
                    "",
                    "",
                    "                        form.add({",
                    "                            xtype:'numberfield',",
                    "                            label:'batchRoute.id',",
                    "                            name:'id',",
                    "                            value:record.data['id']",
                    "                            ,hidden:true",
                    "                        });",
                    "",
                    "                        //轉換格式-製程開始日期",
                    "                        var startDate;",
                    "                        if(record.data['startDate'])",
                    "                        startDate=new Date(record.data['startDate']);",
                    "                        else",
                    "                        startDate=null;",
                    "",
                    "                        form.add({",
                    "                            xtype:'datepickerfield',",
                    "                            label:Utilities.getMsg('batchRoute.startDate.label'),",
                    "                            name:'startDate',",
                    "                            value:startDate,",
                    "                            dateFormat: 'Y-m-d',",
                    "                            placeHolder: Utilities.getMsg('default.message.inputDate'),",
                    "                            picker:{value:new Date(Ext.Date.format(new Date(),'Y-m-d'))}",
                    "                        });",
                    "                        //轉換格式-製程結束日期",
                    "                        var endDate;",
                    "                        if(record.data['endDate'])",
                    "                        endDate=new Date(record.data['endDate']);",
                    "                        else",
                    "                        endDate=null;",
                    "",
                    "                        form.add({",
                    "                            xtype:'datepickerfield',",
                    "                            label:Utilities.getMsg('batchRoute.endDate.label'),",
                    "                            name:'endDate',",
                    "                            value:endDate,",
                    "                            dateFormat: 'Y-m-d',",
                    "                            placeHolder: Utilities.getMsg('default.message.inputDate'),",
                    "                            picker:{value:new Date(Ext.Date.format(new Date(),'Y-m-d'))}",
                    "                        });",
                    "",
                    "                        that.getBatchParamsCarousel().setActiveItem(that.getBatchParamsCarousel().down('panel[itemId=batchRouteParamsPanel]'));",
                    "",
                    "                        // display Image",
                    "                        var commonImageUploader= that.getBatchParamsCarousel().down('commonimageuploader');",
                    "",
                    "                        console.log(commonImageUploader);",
                    "                        commonImageUploader.setDomainName('batchRoute');",
                    "                        commonImageUploader.setDomainId(record.data['id']);",
                    "                        commonImageUploader.showImage();",
                    "                    }//end if success",
                    "                    else{",
                    "                        Ext.Msg.alert(\"Failed\", operation['_resultSet']['_message']);",
                    "                    }",
                    "                    that.getBatchParamsCarousel().setMasked(false);",
                    "                }//end callback",
                    "            });//end store.load             ",
                    "        }//end else ",
                    "",
                    "    }//end callback",
                    "});",
                    ""
                ]
            },
            "designerId": "0bb35c94-9325-439b-8d89-c548a27bf94a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doSaveOrUpdate",
                "designer|params": [
                    "btn, e, eOpts"
                ],
                "implHandler": [
                    "console.log('BatchParamsCarouselController-doSaveOrUpdate');",
                    "",
                    "var form=this.getBatchRouteParamsPanel().down('formpanel[itemId=batchRouteParamsForm]');",
                    "var that=this;",
                    "",
                    "form.submit({",
                    "    url:'/batchReportDet/doSaveOrUpdate',",
                    "    method: 'POST',",
                    "    waitMsg: Utilities.getMsg('default.message.update'),",
                    "    success: function(form,result) {",
                    "        Ext.Msg.alert(\"Success\", result.message);",
                    "    },",
                    "    failure: function(form,result){",
                    "        Ext.Msg.alert(\"Failed\", result.message);",
                    "    }",
                    "",
                    "});"
                ]
            },
            "designerId": "3c0550ff-776f-4f02-a7d5-48b60d5d4eb4"
        }
    ]
}