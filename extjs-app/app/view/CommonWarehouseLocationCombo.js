/*
 * File: app/view/CommonWarehouseLocationCombo.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.view.CommonWarehouseLocationCombo', {
    extend: 'Ext.form.field.ComboBox',
    alias: 'widget.commonwarehouselocationcombo',

    disabled: true,
    itemId: 'commonWarehouseLocationCombo',
    fieldLabel: 'WarehouseLocation.name',
    name: 'warehouseLocation.id',
    displayField: 'name',
    forceSelection: true,
    minChars: 0,
    queryMode: 'local',
    queryParam: 'nameLike',
    store: 'WarehouseLocationStore',
    valueField: 'id',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                select: {
                    fn: me.onCommonWarehouseLocationComboSelect,
                    scope: me
                },
                change: {
                    fn: me.onCommonWarehouseLocationComboChange,
                    scope: me
                }
            }
        });

        me.processCommonWarehouseLocationCombo(me);
        me.callParent(arguments);
    },

    processCommonWarehouseLocationCombo: function(config) {
        config.fieldLabel=Utilities.getMsg('warehouseLocation.name.label');

        return config;
    },

    onCommonWarehouseLocationComboSelect: function(combo, records, eOpts) {
        if(combo.up() && combo.up().getForm()){
            combo.up().getForm().setValues({
                //'warehouse.id':records[0].data['warehouse.id'],
                //'warehouse.title':records[0].data['warehouse.title'],
                'warehouseLocation.title':records[0].data['title']
            });
        }
    },

    onCommonWarehouseLocationComboChange: function(field, newValue, oldValue, eOpts) {
        if (newValue == null) {
            field.reset();
            if(field.up() && field.up().getForm()){
                field.up().getForm().setValues({
                    //'warehouse.id':null,
                    //'warehouse.title':null,
                    'warehouseLocation.title':null
                });
            }
        }
    }

});