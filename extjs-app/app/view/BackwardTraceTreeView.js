/*
 * File: app/view/BackwardTraceTreeView.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.view.BackwardTraceTreeView', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.backwardtracetreeview',

    requires: [
        'foodprint.view.CommonTraceToolbar',
        'foodprint.view.CommonBatchCombo'
    ],

    itemId: 'backwardTraceTreeCt',
    layout: {
        align: 'stretch',
        type: 'vbox'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'commontracetoolbar'
                },
                me.processBackwardTraceTreePanel({
                    xtype: 'treepanel',
                    flex: 1,
                    itemId: 'backwardTraceTreePanel',
                    collapsible: false,
                    store: 'BackwardTraceTreeStore',
                    useArrows: true,
                    columns: [
                        {
                            xtype: 'treecolumn',
                            dataIndex: 'arrow',
                            text: 'arrow',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'note',
                            text: 'note',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'class',
                            text: 'class',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'type',
                            text: 'type',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: 'name',
                            flex: 2
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'item.name',
                            text: 'item.name',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'item.title',
                            text: 'item.title',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'item.spec',
                            text: 'item.spec',
                            flex: 1
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'qty',
                            text: 'qty',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'item.unit',
                            text: 'item.unit',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'sheet',
                            text: 'sheet',
                            flex: 3
                        }
                    ]
                })
            ]
        });

        me.callParent(arguments);
    },

    processBackwardTraceTreePanel: function(config) {


        return Utilities.createFiltersFeature(Utilities.processConfigBundle(config, 'backwardTraceTree'));
    }

});