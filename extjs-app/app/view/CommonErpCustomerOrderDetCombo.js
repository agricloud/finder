/*
 * File: app/view/CommonErpCustomerOrderDetCombo.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.view.CommonErpCustomerOrderDetCombo', {
    extend: 'Ext.form.field.ComboBox',
    alias: 'widget.commonerpcustomerorderdetcombo',

    itemId: 'commonErpCustomerOrderDetCombo',
    fieldLabel: 'CustomerOrderDet.sequence',
    name: 'customerOrderDet.id',
    selectOnFocus: true,
    displayField: 'sequence',
    forceSelection: true,
    minChars: 0,
    queryParam: 'nameLike',
    store: 'ErpCustomerOrderDetStore',
    valueField: 'id',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                select: {
                    fn: me.onCommonErpCustomerOrderDetComboSelect,
                    scope: me
                },
                render: {
                    fn: me.onCommonErpCustomerOrderDetComboRender,
                    scope: me
                }
            }
        });

        me.processCommonErpCustomerOrderDetCombo(me);
        me.callParent(arguments);
    },

    processCommonErpCustomerOrderDetCombo: function(config) {
        config.fieldLabel=Utilities.getMsg('erpCustomerOrderDet.name.label');

        return config;
    },

    onCommonErpCustomerOrderDetComboSelect: function(combo, records, eOpts) {
        if(combo.up() && combo.up().getForm()){
            combo.up().getForm().setValues({
                'item.id':records[0].data['item.id'],
                'item.name':records[0].data['item.name'],
                'item.title':records[0].data['item.title'],
                'qty':records[0].data['qty']
            });
        }
    },

    onCommonErpCustomerOrderDetComboRender: function(component, eOpts) {
        var params={};
        params["customerOrder.id"]='';
        component.getStore().getProxy().extraParams = params;
    }

});