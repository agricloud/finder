/*
 * File: app/view/CommonBatchCombo.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.view.CommonBatchCombo', {
    extend: 'Ext.form.field.ComboBox',
    alias: 'widget.commonbatchcombo',

    itemId: 'commonBatchCombo',
    fieldLabel: 'batch.name',
    name: 'batch.id',
    selectOnFocus: true,
    displayField: 'name',
    forceSelection: true,
    minChars: 0,
    queryParam: 'nameLike',
    store: 'BatchStore',
    valueField: 'id',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                render: {
                    fn: me.onCommonBatchComboRender,
                    scope: me
                },
                select: {
                    fn: me.onCommonBatchComboSelect,
                    scope: me
                }
            }
        });

        me.processCommonBatchCombo(me);
        me.callParent(arguments);
    },

    processCommonBatchCombo: function(config) {
        config.fieldLabel=Utilities.getMsg('batch.name.label');

        return config;
    },

    onCommonBatchComboRender: function(component, eOpts) {
        component.getStore().load();
    },

    onCommonBatchComboSelect: function(combo, records, eOpts) {
        if(combo.up() && combo.up() instanceof Ext.form.Panel  && combo.up().getForm()){
            combo.up().getForm().setValues({
                'item.id':records[0].data['item.id'],
                'item.name':records[0].data['item.name'],
                'item.title':records[0].data['item.title'],
                'childBatch.item.name':records[0].data['item.name'],
                'childBatch.item.title':records[0].data['item.title']
            });
            if(combo.up().getForm().findField('item.id') instanceof Ext.form.field.ComboBox){
                var itemcombo=combo.up().getForm().findField('item.id');
                Utilities.comboReload(itemcombo,records[0].data['item.id'],records[0].data['item.name']);
            }
        }
    }

});