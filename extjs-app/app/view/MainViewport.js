/*
 * File: app/view/MainViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.view.MainViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.mainviewport',

    requires: [
        'foodprint.view.LoginContainer',
        'foodprint.view.UserForm'
    ],

    id: 'mainVP',
    layout: {
        type: 'card'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'logincontainer'
                },
                {
                    xtype: 'panel',
                    tbar: {
                        xtype: 'commonshowtoolbar'
                    },
                    itemId: '',
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    }
                },
                {
                    xtype: 'panel',
                    tbar: {
                        xtype: 'commonshowtoolbar'
                    },
                    itemId: 'register',
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    },
                    items: [
                        {
                            xtype: 'userform',
                            flex: 1
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onRegisterAfterRender,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onMainVPAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onMainVPAfterRender: function(component, eOpts) {
        var mask = Ext.get('loading-mask');
        // Destroy the masks
        if(mask)
        mask.fadeOut({callback: function(){ mask.destroy(); }});

        Ext.getBody().removeCls( 'splash' );
    },

    onRegisterAfterRender: function(component, eOpts) {
        component.down('commondeletebtn').setVisible(false);
    }

});