/*
 * File: app/controller/BatchSourceController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.controller.BatchSourceController', {
    extend: 'Ext.app.Controller',

    mixins: {
        commonController: 'foodprint.controller.CommonController'
    },

    models: [
        'Batch',
        'BatchSource'
    ],
    stores: [
        'BatchStore',
        'BatchSourceStore'
    ],
    views: [
        'BatchSourceView'
    ],

    refs: [
        {
            ref: 'mainGrid',
            selector: 'batchsourceview #grid'
        },
        {
            ref: 'mainForm',
            selector: 'batchsourceview #form'
        },
        {
            ref: 'masterGrid',
            selector: 'batchsourceview #masterGrid'
        }
    ],

    init: function(application) {
        this.control({
            'batchsourceview #index commonindextoolbar commoncreatebtn':{
                click:this.doCreate
            },
            'batchsourceview #index commonindextoolbar commonshowbtn':{
                click:this.doShowBatchSource
            },
            'batchsourceview #show commonshowtoolbar commondeletebtn':{
                click:this.doDeleteBatchSource
            },
            'batchsourceview #show commonshowtoolbar commonsavebtn':{
                click:this.doSaveBatchSource
            },
            'batchsourceview #show commonshowtoolbar commoncancelbtn':{
                click:this.doCancelBatchSource
            },

            'batchsourceview #index #masterGrid':{
                select:this.doIndexDetail
            },
            'batchsourceview #grid':{
                select: this.enableShowBtn,
                deselect: this.disableShowBtn,
                itemdblclick: this.doShowBatchSource
            }
        });


        this.domainName = 'batchSource';
        this.masterKey='batch.id';
    },

    doShowBatchSource: function() {
        var that=this;
        this.doShow(function(success,form,action){
            //由於store設定load第1-50筆
            //導致doShow時若資料屬於第50筆之後無法正常顯示
            //在此使combo重新load store
            var cbcombo=form.findField('childBatch.id');
            Utilities.comboReload(cbcombo,action.result.data['childBatch.id'],action.result.data['childBatch.name']);
        });

    },

    doCancelBatchSource: function() {
        var that=this;
        this.doCancel(function(){
            that.getMasterGrid().getStore().load();
        });

    },

    doDeleteBatchSource: function() {
        var that=this;
        this.doDelete(function(success){
            that.getMasterGrid().getStore().load();
        });

    },

    doSaveBatchSource: function() {
        var that=this;
        this.doSave(function(success){
            that.getMasterGrid().getStore().load();
        });

    }

});
