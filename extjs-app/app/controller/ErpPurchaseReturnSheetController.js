/*
 * File: app/controller/ErpPurchaseReturnSheetController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.controller.ErpPurchaseReturnSheetController', {
    extend: 'Ext.app.Controller',

    mixins: {
        commonController: 'foodprint.controller.CommonController'
    },

    models: [
        'ErpPurchaseReturnSheet',
        'ErpPurchaseReturnSheetDet',
        'ErpPurchaseSheet',
        'ErpPurchaseSheetDet',
        'Supplier',
        'Warehouse',
        'WarehouseLocation'
    ],
    stores: [
        'ErpPurchaseReturnSheetStore',
        'ErpPurchaseReturnSheetDetStore',
        'ErpPurchaseSheetStore',
        'ErpPurchaseSheetDetStore',
        'SupplierStore',
        'WarehouseStore',
        'WarehouseLocationStore'
    ],
    views: [
        'ErpPurchaseReturnSheetView'
    ],

    refs: [
        {
            ref: 'mainGrid',
            selector: 'erppurchasereturnsheetview #grid'
        },
        {
            ref: 'mainForm',
            selector: 'erppurchasereturnsheetview #form'
        },
        {
            ref: 'detailGrid',
            selector: 'erppurchasereturnsheetview #detailGrid'
        },
        {
            ref: 'detailForm',
            selector: 'erppurchasereturnsheetview #detailForm'
        }
    ],

    init: function(application) {
        this.control({
            'erppurchasereturnsheetview #index commonindextoolbar commoncreatebtn':{
                click:this.doCreateAndIndexDetail
            },
            'erppurchasereturnsheetview #index commonindextoolbar commonshowbtn':{
                click:this.doShowPurchaseReturnSheet
            },
            'erppurchasereturnsheetview #show commonshowtoolbar commondeletebtn':{
                click:this.doDelete
            },
            'erppurchasereturnsheetview #show commonshowtoolbar commonsavebtn':{
                click:this.doSave
            },
            'erppurchasereturnsheetview #show commonshowtoolbar commoncancelbtn':{
                click:this.doCancel
            },
            'erppurchasereturnsheetview #show commonshowtoolbar commonprintbtn':{
                click:this.doPrint
            },
            'erppurchasereturnsheetview #grid':{
                select: this.enableShowBtn,
                deselect: this.disableShowBtn,
                itemdblclick: this.doShowPurchaseReturnSheet
            },
            'erppurchasereturnsheetview #show commonindextoolbar commoncreatebtn':{
                click:this.doCreateDetail
            },
            'erppurchasereturnsheetview #show commonindextoolbar commonshowbtn':{
                click:this.doShowPurchaseReturnSheetDet
            },
            'erppurchasereturnsheetview #showDetail commonshowtoolbar commondeletebtn':{
                click:this.doDeleteDetail
            },
            'erppurchasereturnsheetview #showDetail commonshowtoolbar commonsavebtn':{
                click:this.doSaveDetail
            },
            'erppurchasereturnsheetview #showDetail commonshowtoolbar commoncancelbtn':{
                click:this.doCancelDetail
            },
            'erppurchasereturnsheetview #detailGrid':{
                select: this.enableDetailShowBtn,
                deselect: this.disableDetailShowBtn,
                itemdblclick: this.doShowPurchaseReturnSheetDet
            },
            'erppurchasereturnsheetview #showDetail #purchaseSheetDetContainer commonselectbtn':{
                click:this.activePurchaseSheetDetIndex
            },
            'erppurchasereturnsheetview #purchaseSheetDetIndex erppurchasesheetgrid':{
                select: this.doIndexDetailPurchaseSheet
            },
            'erppurchasereturnsheetview #purchaseSheetDetIndex erppurchasesheetdetgrid':{
                itemdblclick: this.doSelectPurchaseSheetDet
            }
        });
        this.domainName = 'foodpaint';
        this.foodpaintController = 'purchaseReturnSheet';
        this.foodpaintDetController = 'purchaseReturnSheetDet';
        this.masterKey='purchaseReturnSheet.id';
    },

    doShowPurchaseReturnSheet: function() {
        this.doShowAndIndexDetail(function(success,form,action){
            //由於store設定load第1-50筆
            //導致doShow時若資料屬於第50筆之後無法正常顯示
            //在此使combo重新load store
            var spcombo=form.findField('supplier.id');
            Utilities.comboReload(spcombo,action.result.data['supplier.id'],action.result.data['supplier.name']);

        });
    },

    doShowPurchaseReturnSheetDet: function() {

        this.doShowDetail(function(success,form,action){
            //由於store設定load第1-50筆
            //導致doShow時若資料屬於第50筆之後無法正常顯示
            //在此使combo重新load store
            var whcombo=form.findField('warehouse.id');
            Utilities.comboReload(whcombo,action.result.data['warehouse.id'],action.result.data['warehouse.name']);

            //warehouseLocation combo需指定warehouse id才可load
            var wlcombo=form.findField('warehouseLocation.id');
            Utilities.compositionComboReload(wlcombo, 'warehouse.id', action.result.data['warehouse.id'],action.result.data['warehouseLocation.id']);
        });
    },

    doIndexDetailPurchaseSheet: function(obj, record, index, eOpts) {
        var grid = this.getMainGrid().up().up().down("panel[itemId=purchaseSheetDetIndex]").down("grid[itemId=erpPurchaseSheetDetGrid]");

        grid.getStore().data.clear();

        var params = {}
        params["purchaseSheet.id"]=record.data.id;

        grid.getStore().getProxy().extraParams = params;
        grid.getStore().load();
    },

    doSelectPurchaseSheetDet: function(obj, record, index, eOpts) {

        this.getDetailForm().getForm().setValues({
            'purchaseSheetDet.id':record.data['id'],
            'purchaseSheetDet.typeName':record.data['typeName'],
            'purchaseSheetDet.name':record.data['name'],
            'purchaseSheetDet.sequence':record.data['sequence'],
            'warehouse.id':record.data['warehouse.id'],
            'warehouse.title':record.data['warehouse.title'],
            'warehouseLocation.id':record.data['warehouseLocation.id'], 
            'warehouseLocation.title':record.data['warehouseLocation.title'],   
            'item.id':record.data['item.id'],
            'item.name':record.data['item.name'],   
            'item.title':record.data['item.title'],
            'batch.id':record.data['batch.id'],
            'batch.name':record.data['batch.name'],
            'qty':record.data['qty']

        });

        //在此使combo重新load store
        var whcombo=this.getDetailForm().getForm().findField('warehouse.id');
        Utilities.comboReload(whcombo,record.data['warehouse.id'],record.data['warehouse.name']);

        //warehouseLocation combo需指定warehouse id才可load
        var wlcombo=this.getDetailForm().getForm().findField('warehouseLocation.id');
        Utilities.compositionComboReload(wlcombo, 'warehouse.id',record.data['warehouse.id'],record.data['warehouseLocation.id']);

        this.activeDetailEditor();
    },

    activePurchaseSheetDetIndex: function() {

        this.getMainForm().up('panel[itemId=show]').up().getLayout().setActiveItem(this.getMainGrid().up().up().down("panel[itemId=purchaseSheetDetIndex]"));


    }

});
