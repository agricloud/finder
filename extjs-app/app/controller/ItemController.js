/*
 * File: app/controller/ItemController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodprint.controller.ItemController', {
    extend: 'Ext.app.Controller',

    mixins: {
        commonController: 'foodprint.controller.CommonController'
    },

    models: [
        'Item'
    ],
    stores: [
        'ItemStore'
    ],
    views: [
        'ItemView'
    ],

    refs: [
        {
            ref: 'mainGrid',
            selector: 'itemview #grid'
        },
        {
            ref: 'mainForm',
            selector: 'itemview #form'
        },
        {
            ref: 'imageUploader',
            selector: 'itemview commonimageuploader'
        }
    ],

    init: function(application) {
        this.control({
            'itemview #index commonindextoolbar commoncreatebtn':{
                click:this.doCreateForm
            },
            'itemview #index commonindextoolbar commonshowbtn':{
                click:this.doShowForm
            },
            'itemview #show commonshowtoolbar commondeletebtn':{
                click:this.doDelete
            },
            'itemview #show commonshowtoolbar commonsavebtn':{
                click:this.doSave
            },
            'itemview #show commonshowtoolbar commoncancelbtn':{
                click:this.doCancel
            },
            'itemview #grid':{
                select: this.enableShowBtn,
                deselect: this.disableShowBtn,
                itemdblclick: this.doShowForm
            }

        });


        this.domainName = 'item';
    },

    doShowForm: function() {
        console.log('itemEditorController--'+this.domainName+'--doShowForm');

        this.setImageUploader();
        this.doShow();
    },

    doCreateForm: function() {
        this.getImageUploader().emptyImage();
        this.doCreate();
    }

});
